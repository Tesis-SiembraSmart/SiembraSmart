@startuml

package "com.example.siembrasmart" {

    package controllers {
        class UserProfileController {
        + loadUserProfile(userId: String, onDataLoaded: (Usuario?) -> Unit): void
        + saveUserProfile(userId: String, updatedFirstName: String, updatedLastName: String, updatedPhoneNumber: String, onSaveComplete: (Boolean) -> Unit): void
        + signOut(): void
        }

        class StartFormController {
            + saveSelectedModels(userId: String, selectedModels: List<String>, callback: (Boolean) -> Unit): void
        }

        class SignupController {
            + createAccount(email: String, password: String, firstName: String, lastName: String, phoneNumber: String, activity: SignupActivity): void
            + saveUserToDatabase(userId: String, user: Usuario, activity: SignupActivity): void
        }

        class RegistroCultivoController {
            + obtenerUbicacionActual(callback: (Double, Double) -> Unit): void
            + saveCultivoForCurrentUser(cultivo: Cultivo, callback: (Boolean) -> Unit): void
        }

        class NewsController {
            + generarUrlParaNoticias(cultivo: String, soloColombia: Boolean): String
            + cargarUrlEnWebView(webView: WebView, url: String): void
        }

        class ForecastController {
            + crearGrafico(entradas: List<Entry>, label: String, tiempos: List<String>, grafico: LineChart, context: Context): void
        }

        class ConsejosController {
            + makePredictionRequest(data: JSONObject, callback: (String) -> Unit): void
            + configurarSpinner(userId: String, spinner: Spinner, onItemSelected: (String) -> Unit): void
        }

        class ClimaController {
            + obtenerDatosClima(callback: (Clima) -> Unit): void
            + updateMap(map: GoogleMap): void
            + navigateToForecast(activity: ClimaActivity): void
        }

        class AlertController {
            + fetchWeatherData(latitud: Double, longitud: Double, onResult: (Alertas) -> Unit): void
            + generateCaudalAlerts(caudalMax: MutableList<Double>, caudalMean: MutableList<Double>, caudalMin: MutableList<Double>, thresholdCaudalAlto: Double, thresholdCaudalModerado: Double, thresholdCaudalMuyBajo: Double, thresholdCaudalBajo: Double): Alertas
        }
    }

    package models {
           class Usuario {
               + firstName: String
               + lastName: String
               + email: String
               + phoneNumber: String
               + modelosUsados: List<String>
               + cultivos: List<Cultivo>
           }

           class Forecast {
               + temperaturas: List<Double>
               + humedades: List<Int>
               + probabilidadesPrecipitacion: List<Int>
               + precipitaciones: List<Double>
               + evapotranspiraciones: List<Double>
               + velocidadesViento: List<Double>
               + humedadesSuelo: List<Double>
               + tiempos: List<String>
           }

           class Cultivo {
               + nombre: String
               + tipo: String
               + fechaInicio: Date
               + latitud: Double
               + longitud: Double
               + area: Double
               + id: String
           }

           class Clima {
               + temperatura: Double
               + humedad: Int
               + aparenteTemperatura: Double
               + precipitacion: Double
               + nubosidad: Int
               + velocidadViento: Double
               + temperaturas: MutableList<Double>
               + humedades: MutableList<Int>
               + probabilidadesPrecipitacion: MutableList<Int>
               + precipitaciones: MutableList<Double>
               + evapotranspiraciones: MutableList<Double>
               + velocidadesViento: MutableList<Double>
               + humedadesSuelo: MutableList<Double>
               + times: MutableList<String>
           }

           class Alertas {
               + alertaCaudalAlto: String
               + alertaCaudalModerado: String
               + alertaCaudalMuyBajo: String
               + alertaCaudalBajo: String
           }

       }

    package utils {
        class CustomMarkerView {
            + updateMarker(data: Clima): void
        }

        class Navigation {
            + navigateToActivity(context: Context, activityClass: Class<*>): void
        }

        class Notification {
            + sendNotification(title: String, message: String): void
        }

        class DialogHelper {
            + mostrarDialogoAyuda(context: Context, titulo: String, mensaje: String): void
        }
    }


    package views {
        class UserProfileActivity {
            - binding: ActivityUserProfileBinding
            - userId: String
            - controller: UserProfileController
            - loadUserProfile(): void
            - cerrarSesion(): void
        }

        class StartFormActivity {
            - binding: ActivityStartFormBinding
            - controller: StartFormController
        }

        class SignupActivity {
            - binding: ActivitySignupBinding
            - controller: SignupController
            + onAccountCreationSuccess(): void
            + onUserSaveSuccess(): void
        }

        class RegistroCultivoActivity {
            - binding: ActivityRegistroCultivoBinding
            - controller: RegistroCultivoController
            - selectedDate: Date
            - saveCultivo(): void
        }

        class NewsActivity {
            - binding: ActivityNewsBinding
            - webView: WebView
            - controlador: NewsController
            - cultivoSeleccionado: String
            - cargarNoticias(): void
        }

        class ForecastsActivity {
            - forecastController: ForecastController
            - binding: ActivityForecastsBinding
            - crearGraficos(Forecast): void
        }

        class ConsejosActivity {
            - auth: FirebaseAuth
            - binding: ActivityConsejosBinding
            - controller: ConsejosController
            - cargarFormulario(String): void
            - cargarFormularioCacao(): void
            - cargarFormularioCafe(): void
        }

        class ClimaActivity {
            - auth: FirebaseAuth
            - climaController: ClimaController
            - binding: ActivityClimaBinding
            - map: GoogleMap
            - actualizarInterfaz(Clima): void
            + onMapReady(GoogleMap): void
        }

        class AlertActivity {
            - binding: ActivityAlertBinding
            - auth: FirebaseAuth
            - alertController: AlertController
            - fusedLocationClient: FusedLocationProviderClient
            - calendar: Calendar
            - getLocationAndFetchData(): void
            - scheduleCustomNotification(): void

        }
    }

    ClimaActivity --> ClimaController : uses
    AlertActivity --> AlertController : uses
    ConsejosActivity --> ConsejosController : uses
    ForecastsActivity --> ForecastController : uses
    ForecastsActivity --> DialogHelper : uses

    NewsActivity --> NewsController : uses
    RegistroCultivoActivity --> RegistroCultivoController : uses
    SignupActivity --> SignupController : uses
    StartFormActivity --> StartFormController : uses
    UserProfileActivity --> UserProfileController : uses

    UserProfileController --> Usuario : manages
    StartFormController --> Usuario : stores models used
    NewsController --> Usuario : retrieves news preferences
    AlertController --> Alertas : retrieves alert data
    ClimaController --> Clima : updates weather data
    ForecastController --> Forecast : retrieves forecast data
    RegistroCultivoController --> Cultivo : manages crop data

    CustomMarkerView --> Clima : displays climate info
    Notification --> Alertas : sends alerts
    Navigation --> ClimaActivity : navigates to
    Navigation --> MainActivity : navigates to
    Navigation --> SignupActivity : navigates to

    MainActivity --> ClimaActivity : navigates on login
    MainActivity --> SignupActivity : navigates on signup
}

@enduml
